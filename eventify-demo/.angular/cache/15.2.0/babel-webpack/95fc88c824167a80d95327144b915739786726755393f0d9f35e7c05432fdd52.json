{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./login.service\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(http, loginService) {\n    this.http = http;\n    this.loginService = loginService;\n    this.credentials = {\n      email: '',\n      password: ''\n    };\n    this.event = {\n      eventID: 6,\n      eventName: \"Hackathon\",\n      eventDesc: \"Discover new ideas and strategies for success\",\n      event_type_id: 3,\n      location_type_id: 2,\n      startdate: new Date(\"2023-02-27 13:04:27\"),\n      enddate: new Date(\"2023-02-27 17:04:27\"),\n      eventduration: 4,\n      eventCapacity: 96,\n      major_type_id: 5,\n      event_type: \"Games\"\n    };\n  }\n  ngOnInit() {\n    this.loginService.getRecommendedEvents(this.event).subscribe(response => {\n      debugger;\n      //this.userInfo = response;\n      //return;\n      console.log(response);\n      // this.userInfo.page = response?.page;\n      // this.userInfo.per_page = response?.per_page;\n      // //this.userInfo.support = response.support;\n      // this.userInfo.total = response?.total;\n      // this.userInfo.total_pages = response?.total_pages;\n      // this.userInfo.data = response?.data?.map((item) => {\n      //   var user = {} as User;\n      //   user.avatar = item?.avatar;\n      //   user.email = item?.email;\n      //   user.first_name = item?.first_name;\n      //   user.last_name = item?.last_name;\n      //   user.id = item?.id;\n      //   return user;\n      return response;\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.LoginService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 14,\n  vars: 2,\n  consts: [[1, \"login-container\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\")(4, \"div\", 1)(5, \"label\", 2);\n      i0.ɵɵtext(6, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.credentials.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\", 4);\n      i0.ɵɵtext(10, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.credentials.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"button\", 6);\n      i0.ɵɵtext(13, \"Log in\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.credentials.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.credentials.password);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\".login-container[_ngcontent-%COMP%] {\\r\\n    max-width: 400px;\\r\\n    margin: 0 auto;\\r\\n    text-align: center;\\r\\n  }\\r\\n  \\r\\n  h2[_ngcontent-%COMP%] {\\r\\n    font-size: 2rem;\\r\\n    margin-bottom: 1rem;\\r\\n  }\\r\\n  \\r\\n  form[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n  }\\r\\n  \\r\\n  .form-group[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    margin-bottom: 1rem;\\r\\n    text-align: left;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  label[_ngcontent-%COMP%] {\\r\\n    font-weight: bold;\\r\\n    margin-bottom: 0.5rem;\\r\\n  }\\r\\n  \\r\\n  input[type=\\\"email\\\"][_ngcontent-%COMP%], input[type=\\\"password\\\"][_ngcontent-%COMP%], button[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\r\\n    border: none;\\r\\n    border-radius: 0.5rem;\\r\\n    padding: 0.5rem;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  input[type=\\\"email\\\"][_ngcontent-%COMP%], input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\r\\n    background-color: #f5f5f5;\\r\\n    margin-bottom: 1rem;\\r\\n  }\\r\\n  \\r\\n  button[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\r\\n    background-color: #0066cc;\\r\\n    color: #fff;\\r\\n    cursor: pointer;\\r\\n    font-size: 1rem;\\r\\n    transition: all 0.2s ease-in-out;\\r\\n  }\\r\\n  \\r\\n  button[type=\\\"submit\\\"][_ngcontent-%COMP%]:hover {\\r\\n    background-color: #0052a3;\\r\\n  }\\r\\n  \\r\\n  @media screen and (min-width: 768px) {\\r\\n    .login-container[_ngcontent-%COMP%] {\\r\\n      max-width: 600px;\\r\\n    }\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2Qsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsZUFBZTtJQUNmLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLFdBQVc7RUFDYjs7RUFFQTtJQUNFLGlCQUFpQjtJQUNqQixxQkFBcUI7RUFDdkI7O0VBRUE7OztJQUdFLFlBQVk7SUFDWixxQkFBcUI7SUFDckIsZUFBZTtJQUNmLFdBQVc7RUFDYjs7RUFFQTs7SUFFRSx5QkFBeUI7SUFDekIsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLFdBQVc7SUFDWCxlQUFlO0lBQ2YsZUFBZTtJQUNmLGdDQUFnQztFQUNsQzs7RUFFQTtJQUNFLHlCQUF5QjtFQUMzQjs7RUFFQTtJQUNFO01BQ0UsZ0JBQWdCO0lBQ2xCO0VBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tY29udGFpbmVyIHtcclxuICAgIG1heC13aWR0aDogNDAwcHg7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcbiAgXHJcbiAgaDIge1xyXG4gICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcclxuICB9XHJcbiAgXHJcbiAgZm9ybSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgfVxyXG4gIFxyXG4gIC5mb3JtLWdyb3VwIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgXHJcbiAgbGFiZWwge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XHJcbiAgfVxyXG4gIFxyXG4gIGlucHV0W3R5cGU9XCJlbWFpbFwiXSxcclxuICBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0sXHJcbiAgYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0ge1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMC41cmVtO1xyXG4gICAgcGFkZGluZzogMC41cmVtO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIFxyXG4gIGlucHV0W3R5cGU9XCJlbWFpbFwiXSxcclxuICBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTtcclxuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XHJcbiAgfVxyXG4gIFxyXG4gIGJ1dHRvblt0eXBlPVwic3VibWl0XCJdIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDY2Y2M7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGZvbnQtc2l6ZTogMXJlbTtcclxuICAgIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2UtaW4tb3V0O1xyXG4gIH1cclxuICBcclxuICBidXR0b25bdHlwZT1cInN1Ym1pdFwiXTpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA1MmEzO1xyXG4gIH1cclxuICBcclxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xyXG4gICAgLmxvZ2luLWNvbnRhaW5lciB7XHJcbiAgICAgIG1heC13aWR0aDogNjAwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;AAUA,OAAM,MAAOA,cAAc;EAWzBC,YAAoBC,IAAgB,EAC3BC,YAA0B;IADf,SAAI,GAAJD,IAAI;IACf,iBAAY,GAAZC,YAAY;IAPrB,gBAAW,GAAG;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;KACX;IAMC,IAAI,CAACC,KAAK,GAAG;MACXC,OAAO,EAAE,CAAC;MACVC,SAAS,EAAE,WAAW;MACtBC,SAAS,EAAE,+CAA+C;MAC1DC,aAAa,EAAE,CAAC;MAChBC,gBAAgB,EAAE,CAAC;MACnBC,SAAS,EAAE,IAAIC,IAAI,CAAC,qBAAqB,CAAC;MAC1CC,OAAO,EAAE,IAAID,IAAI,CAAC,qBAAqB,CAAC;MACxCE,aAAa,EAAE,CAAC;MAChBC,aAAa,EAAE,EAAE;MACjBC,aAAa,EAAE,CAAC;MAChBC,UAAU,EAAC;KACH;EAGX;EAIDC,QAAQ;IACN,IAAI,CAAChB,YAAY,CAACiB,oBAAoB,CAAC,IAAI,CAACd,KAAK,CAAC,CAACe,SAAS,CAAEC,QAAQ,IAAI;MACxE;MACA;MACA;MACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,OAAOA,QAAQ;IACjB,CAAC,CAAC;EACJ;;AAtDWtB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV3BC,8BAA6B;MACrBA,qBAAK;MAAAA,iBAAK;MACdA,4BAAM;MAEiBA,qBAAK;MAAAA,iBAAQ;MAChCA,gCAAqF;MAAzCA;QAAA;MAAA,EAA+B;MAA3EA,iBAAqF;MAEvFA,8BAAwB;MACAA,yBAAQ;MAAAA,iBAAQ;MACtCA,iCAAiG;MAA5CA;QAAA;MAAA,EAAkC;MAAvFA,iBAAiG;MAEnGA,kCAAkC;MAAAA,uBAAM;MAAAA,iBAAS;;;MANHA,eAA+B;MAA/BA,+CAA+B;MAItBA,eAAkC;MAAlCA,kDAAkC","names":["LoginComponent","constructor","http","loginService","email","password","event","eventID","eventName","eventDesc","event_type_id","location_type_id","startdate","Date","enddate","eventduration","eventCapacity","major_type_id","event_type","ngOnInit","getRecommendedEvents","subscribe","response","console","log","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\MeghasWork\\brickhack\\eventify-demo\\src\\app\\login\\login.component.ts","C:\\MeghasWork\\brickhack\\eventify-demo\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { LoginService } from './login.service';\r\nimport { Event } from '../Models/Event';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  //eventList: Event[];\r\n  event: Event;\r\n\r\n\r\n  credentials = {\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n\r\n  constructor(private http: HttpClient,\r\n    public loginService: LoginService,\r\n  ) {\r\n    this.event = {\r\n      eventID: 6,\r\n      eventName: \"Hackathon\",\r\n      eventDesc: \"Discover new ideas and strategies for success\",\r\n      event_type_id: 3,\r\n      location_type_id: 2,\r\n      startdate: new Date(\"2023-02-27 13:04:27\"),\r\n      enddate: new Date(\"2023-02-27 17:04:27\"),\r\n      eventduration: 4,\r\n      eventCapacity: 96,\r\n      major_type_id: 5,\r\n      event_type:\"Games\"\r\n    } as Event;\r\n\r\n\r\n   }\r\n\r\n \r\n\r\n  ngOnInit(): void {\r\n    this.loginService.getRecommendedEvents(this.event).subscribe((response) => {\r\n      debugger;\r\n      //this.userInfo = response;\r\n      //return;\r\n      console.log(response);\r\n      // this.userInfo.page = response?.page;\r\n      // this.userInfo.per_page = response?.per_page;\r\n      // //this.userInfo.support = response.support;\r\n      // this.userInfo.total = response?.total;\r\n      // this.userInfo.total_pages = response?.total_pages;\r\n      // this.userInfo.data = response?.data?.map((item) => {\r\n      //   var user = {} as User;\r\n      //   user.avatar = item?.avatar;\r\n      //   user.email = item?.email;\r\n      //   user.first_name = item?.first_name;\r\n      //   user.last_name = item?.last_name;\r\n      //   user.id = item?.id;\r\n      //   return user;\r\n      return response;\r\n    });\r\n  }\r\n  }\r\n","<div class=\"login-container\">\r\n    <h2>Login</h2>\r\n    <form>\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input type=\"email\" id=\"email\" name=\"email\" [(ngModel)]=\"credentials.email\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"credentials.password\" required>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn\">Log in</button>\r\n    </form>\r\n  </div>\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}