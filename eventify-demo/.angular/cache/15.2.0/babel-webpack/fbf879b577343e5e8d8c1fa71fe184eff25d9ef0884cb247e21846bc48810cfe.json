{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet SearchEventsComponent = class SearchEventsComponent {\n  constructor(http, loginService) {\n    this.http = http;\n    this.loginService = loginService;\n    this.credentials = {\n      email: '',\n      password: ''\n    };\n    this.event = {\n      eventID: 6,\n      eventName: \"Hackathon\",\n      eventDesc: \"Discover new ideas and strategies for success\",\n      event_type_id: 3,\n      location_type_id: 2,\n      startdate: new Date(\"2023-02-27 13:04:27\"),\n      enddate: new Date(\"2023-02-27 17:04:27\"),\n      eventduration: 4,\n      eventCapacity: 96,\n      major_type_id: 5,\n      event_type: \"Games\"\n    };\n  }\n  ngOnInit() {\n    this.loginService.getRecommendedEvents(this.event).subscribe(response => {\n      debugger;\n      //this.userInfo = response;\n      //return;\n      console.log(response);\n      // this.userInfo.page = response?.page;\n      // this.userInfo.per_page = response?.per_page;\n      // //this.userInfo.support = response.support;\n      // this.userInfo.total = response?.total;\n      // this.userInfo.total_pages = response?.total_pages;\n      // this.userInfo.data = response?.data?.map((item) => {\n      //   var user = {} as User;\n      //   user.avatar = item?.avatar;\n      //   user.email = item?.email;\n      //   user.first_name = item?.first_name;\n      //   user.last_name = item?.last_name;\n      //   user.id = item?.id;\n      //   return user;\n      return response;\n    });\n  }\n};\nSearchEventsComponent = __decorate([Component({\n  selector: 'app-search-events',\n  templateUrl: './search-events.component.html',\n  styleUrls: ['./search-events.component.css']\n})], SearchEventsComponent);\nexport { SearchEventsComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAe,eAAe;AASzC,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAW/BC,YAAoBC,IAAgB,EAC3BC,YAA0B;IADf,SAAI,GAAJD,IAAI;IACf,iBAAY,GAAZC,YAAY;IAPrB,gBAAW,GAAG;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;KACX;IAMC,IAAI,CAACC,KAAK,GAAG;MACXC,OAAO,EAAE,CAAC;MACVC,SAAS,EAAE,WAAW;MACtBC,SAAS,EAAE,+CAA+C;MAC1DC,aAAa,EAAE,CAAC;MAChBC,gBAAgB,EAAE,CAAC;MACnBC,SAAS,EAAE,IAAIC,IAAI,CAAC,qBAAqB,CAAC;MAC1CC,OAAO,EAAE,IAAID,IAAI,CAAC,qBAAqB,CAAC;MACxCE,aAAa,EAAE,CAAC;MAChBC,aAAa,EAAE,EAAE;MACjBC,aAAa,EAAE,CAAC;MAChBC,UAAU,EAAC;KACH;EAGX;EAIDC,QAAQ;IACN,IAAI,CAAChB,YAAY,CAACiB,oBAAoB,CAAC,IAAI,CAACd,KAAK,CAAC,CAACe,SAAS,CAAEC,QAAQ,IAAI;MACxE;MACA;MACA;MACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,OAAOA,QAAQ;IACjB,CAAC,CAAC;EACJ;CAGF;AAzDYtB,qBAAqB,eALjCD,SAAS,CAAC;EACT0B,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,GACW3B,qBAAqB,CAyDjC;SAzDYA,qBAAqB","names":["Component","SearchEventsComponent","constructor","http","loginService","email","password","event","eventID","eventName","eventDesc","event_type_id","location_type_id","startdate","Date","enddate","eventduration","eventCapacity","major_type_id","event_type","ngOnInit","getRecommendedEvents","subscribe","response","console","log","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\MeghasWork\\brickhack\\eventify-demo\\src\\app\\search-events\\search-events.component.ts"],"sourcesContent":["import { Event } from '../Models/Event';\r\nimport { Component,OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SearchEventsService } from './search-events.service';\r\n\r\n@Component({\r\n  selector: 'app-search-events',\r\n  templateUrl: './search-events.component.html',\r\n  styleUrls: ['./search-events.component.css']\r\n})\r\nexport class SearchEventsComponent implements OnInit {\r\n   //eventList: Event[];\r\n   event: Event;\r\n\r\n\r\n   credentials = {\r\n     email: '',\r\n     password: '',\r\n   };\r\n \r\n \r\n   constructor(private http: HttpClient,\r\n     public loginService: LoginService,\r\n   ) {\r\n     this.event = {\r\n       eventID: 6,\r\n       eventName: \"Hackathon\",\r\n       eventDesc: \"Discover new ideas and strategies for success\",\r\n       event_type_id: 3,\r\n       location_type_id: 2,\r\n       startdate: new Date(\"2023-02-27 13:04:27\"),\r\n       enddate: new Date(\"2023-02-27 17:04:27\"),\r\n       eventduration: 4,\r\n       eventCapacity: 96,\r\n       major_type_id: 5,\r\n       event_type:\"Games\"\r\n     } as Event;\r\n \r\n \r\n    }\r\n \r\n  \r\n \r\n   ngOnInit(): void {\r\n     this.loginService.getRecommendedEvents(this.event).subscribe((response) => {\r\n       debugger;\r\n       //this.userInfo = response;\r\n       //return;\r\n       console.log(response);\r\n       // this.userInfo.page = response?.page;\r\n       // this.userInfo.per_page = response?.per_page;\r\n       // //this.userInfo.support = response.support;\r\n       // this.userInfo.total = response?.total;\r\n       // this.userInfo.total_pages = response?.total_pages;\r\n       // this.userInfo.data = response?.data?.map((item) => {\r\n       //   var user = {} as User;\r\n       //   user.avatar = item?.avatar;\r\n       //   user.email = item?.email;\r\n       //   user.first_name = item?.first_name;\r\n       //   user.last_name = item?.last_name;\r\n       //   user.id = item?.id;\r\n       //   return user;\r\n       return response;\r\n     });\r\n   }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}